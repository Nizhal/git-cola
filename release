#!/bin/sh
. "$(dirname "$0")/common.sh"

# Options
do_docs=false
do_website=false
do_tarball=false
do_win32=false
win32_installer=innosetup
do_upload=false
file_to_upload=

# Commands
GH_RELEASE="${TODO}/github-release"

usage () {
	echo "$(basename "$0") [options]"
	echo
	echo "options:"
	echo "--all                     - build tarball, win32, docs, and web"
	echo "--tarball                 - build the tarball"
	echo "--tarball-dir             - specify the tarball directory"
	echo "--doc                     - build the documentation"
	echo "--doc-dir <dir>           - specify the documentation directory"
	echo "--win32                   - build the win32 installer"
	echo "--version <version>       - specify the version number"
	echo "--upload                  - upload release assets to github"
	echo "--upload-file <path>      - upload one release asset"
	exit 1
}

init_release () {
	if test -z "${vVERSION}"
	then
		return 1
	fi
	echo "Checking for a pre-existing ${vVERSION} release"
	if ! "${GH_RELEASE}" get --show-id "${vVERSION}"
	then
		commit=$(git rev-parse "${vVERSION}^{commit}")
		do_or_die "${GH_RELEASE}" create "${vVERSION}" "${commit}"
	fi
}

build_docs () {
	title Building docs
	do_or_die make prefix="${DOCUMENT_ROOT}" install-doc
}

build_tarball () {
	title Building tarball
	do_or_die make app-tarball
	if test "${do_upload}" = true
	then
		upload_file git-cola-"${VERSION}".app.tar.gz
	fi
}

build_win32 () {
	title Building pynsist installer

	do_or_die ./contrib/win32/run-pynsist.sh
	do_or_die cp "build/nsis/git-cola_${VERSION}.exe" "git-cola-${VERSION}.exe"
	do_or_die chmod 644 "git-cola-${VERSION}.exe"
	do_or_die zip -9 -m "git-cola-${VERSION}.windows.zip" -xi "git-cola-${VERSION}.exe"
	if test "${do_upload}" = true
	then
		upload_file "git-cola-${VERSION}.windows.zip"
	fi
}

upload_file () {
	filename="$1"
	do_or_die "${GH_RELEASE}" upload "${vVERSION}" "${filename}"
}

# Parse options
while test $# -gt 0
do
	case "$1" in
	--doc-dir)
		DOCUMENT_ROOT="$2"
		shift
		shift
		;;
	--all)
		# we no longer release the Mac OS X app.tar.gz
		# do_tarball=true
		do_win32=true
		do_docs=true
		do_upload=true
		shift
		;;
	--tarball)
		do_tarball=true
		shift
		;;
	--doc)
		do_docs=true
		shift
		;;
	--version)
		VERSION="$2"
		shift
		shift
		;;
	--win32)
		do_win32=true
		shift
		;;
	--upload)
		do_upload=true
		shift
		;;
	--no-upload)
		do_upload=false
		shift
		;;
	--upload-file)
		do_upload=true
		file_to_upload="$2"
		shift
		shift
		;;
	--)
		shift
		break
		;;
	*)
		usage
		;;
	esac
done

if test "${do_tarball}" = true || test "${do_upload}" = true
then
	init_release
fi


if test "${do_tarball}" = true
then
	build_tarball
fi

if test "${do_win32}" = true
then
	build_win32
fi

if test "${do_docs}" = true
then
	build_docs
fi

if test "${do_upload}" = true && test -n "${file_to_upload}"
then
	upload_file "${file_to_upload}"
fi
